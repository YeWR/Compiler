; ModuleID = "/home/quicker/Documents/compiler/Compiler/parser/generator.py"
target triple = "x86_64-pc-linux-gnu"
target datalayout = ""

@"src" = global [1000 x i8] zeroinitializer
@"pattern" = global [100 x i8] zeroinitializer
@"prefix" = global [100 x i32] zeroinitializer
@"n" = global i32 0
@"m" = global i32 0
declare i32 @"printf"(i8* %".1", ...) 

declare i8* @"gets"(i8* %".1") 

define void @"KMP_matching"() 
{
KMP_matching:
  %"flag" = alloca i32
  store i32 0, i32* %"flag"
  %"k" = alloca i32
  store i32 0, i32* %"k"
  %"q" = alloca i32
  store i32 0, i32* %"q"
  br label %".6"
.5:
  store i32 0, i32* %"q"
  br label %".76"
.6:
  %"q.1" = alloca i32
  store i32 2, i32* %"q.1"
  br label %".7"
.7:
  %".13" = load i32, i32* %"q.1"
  %".14" = load i32, i32* @"m"
  %".15" = icmp sle i32 %".13", %".14"
  %".16" = icmp ne i1 %".15", 0
  br i1 %".16", label %".8", label %".5"
.8:
  br label %".19"
.9:
  br label %".5"
.18:
  %".48" = load i32, i32* %"k"
  %".49" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".48"
  %".50" = load i8, i8* %".49"
  %".51" = load i8, i8* %".49"
  %".52" = load i32, i32* %"q.1"
  %".53" = sub i32 %".52", 1
  %".54" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".53"
  %".55" = load i8, i8* %".54"
  %".56" = load i8, i8* %".54"
  %".57" = icmp eq i8 %".51", %".56"
  %".58" = icmp ne i1 %".57", 0
  br i1 %".58", label %".18.if", label %".18.endif"
.19:
  %".23" = load i32, i32* %"k"
  %".24" = icmp sgt i32 %".23", 0
  %".25" = load i32, i32* %"k"
  %".26" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".25"
  %".27" = load i8, i8* %".26"
  %".28" = load i8, i8* %".26"
  %".29" = load i32, i32* %"q.1"
  %".30" = sub i32 %".29", 1
  %".31" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".30"
  %".32" = load i8, i8* %".31"
  %".33" = load i8, i8* %".31"
  %".34" = icmp ne i8 %".28", %".33"
  %".35" = icmp ne i1 %".24", 0
  %".36" = icmp ne i1 %".34", 0
  %".37" = and i1 %".35", %".36"
  %".38" = icmp ne i1 %".37", 0
  br i1 %".38", label %".20", label %".18"
.20:
  %".40" = load i32, i32* %"k"
  %".41" = sub i32 %".40", 1
  %".42" = getelementptr inbounds [100 x i32], [100 x i32]* @"prefix", i32 0, i32 %".41"
  %".43" = load i32, i32* %".42"
  %".44" = load i32, i32* %".42"
  store i32 %".44", i32* %"k"
  br label %".19"
.21:
  br label %".18"
.18.if:
  %".60" = load i32, i32* %"k"
  %".61" = add i32 %".60", 1
  store i32 %".61", i32* %"k"
  br label %".18.endif"
.18.endif:
  %".64" = load i32, i32* %"q.1"
  %".65" = sub i32 %".64", 1
  %".66" = getelementptr inbounds [100 x i32], [100 x i32]* @"prefix", i32 0, i32 %".65"
  %".67" = load i32, i32* %"k"
  store i32 %".67", i32* %".66"
  %".69" = load i32, i32* %"q.1"
  %".70" = add i32 %".69", 1
  store i32 %".70", i32* %"q.1"
  br label %".7"
.75:
  %".172" = load i32, i32* %"flag"
  %".173" = icmp eq i32 %".172", 0
  %".174" = icmp ne i1 %".173", 0
  br i1 %".174", label %".75.if", label %".75.endif"
.76:
  %"j" = alloca i32
  store i32 0, i32* %"j"
  br label %".77"
.77:
  %".83" = load i32, i32* %"j"
  %".84" = load i32, i32* @"n"
  %".85" = icmp slt i32 %".83", %".84"
  %".86" = icmp ne i1 %".85", 0
  br i1 %".86", label %".78", label %".75"
.78:
  br label %".89"
.79:
  br label %".75"
.88:
  %".117" = load i32, i32* %"q"
  %".118" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".117"
  %".119" = load i8, i8* %".118"
  %".120" = load i8, i8* %".118"
  %".121" = load i32, i32* %"j"
  %".122" = getelementptr inbounds [1000 x i8], [1000 x i8]* @"src", i32 0, i32 %".121"
  %".123" = load i8, i8* %".122"
  %".124" = load i8, i8* %".122"
  %".125" = icmp eq i8 %".120", %".124"
  %".126" = icmp ne i1 %".125", 0
  br i1 %".126", label %".88.if", label %".88.endif"
.89:
  %".93" = load i32, i32* %"q"
  %".94" = icmp sgt i32 %".93", 0
  %".95" = load i32, i32* %"q"
  %".96" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".95"
  %".97" = load i8, i8* %".96"
  %".98" = load i8, i8* %".96"
  %".99" = load i32, i32* %"j"
  %".100" = getelementptr inbounds [1000 x i8], [1000 x i8]* @"src", i32 0, i32 %".99"
  %".101" = load i8, i8* %".100"
  %".102" = load i8, i8* %".100"
  %".103" = icmp ne i8 %".98", %".102"
  %".104" = icmp ne i1 %".94", 0
  %".105" = icmp ne i1 %".103", 0
  %".106" = and i1 %".104", %".105"
  %".107" = icmp ne i1 %".106", 0
  br i1 %".107", label %".90", label %".88"
.90:
  %".109" = load i32, i32* %"q"
  %".110" = sub i32 %".109", 1
  %".111" = getelementptr inbounds [100 x i32], [100 x i32]* @"prefix", i32 0, i32 %".110"
  %".112" = load i32, i32* %".111"
  %".113" = load i32, i32* %".111"
  store i32 %".113", i32* %"q"
  br label %".89"
.91:
  br label %".88"
.88.if:
  %".128" = load i32, i32* %"q"
  %".129" = add i32 %".128", 1
  store i32 %".129", i32* %"q"
  br label %".88.endif"
.88.endif:
  %".132" = load i32, i32* %"q"
  %".133" = load i32, i32* @"m"
  %".134" = icmp eq i32 %".132", %".133"
  %".135" = icmp ne i1 %".134", 0
  br i1 %".135", label %".88.endif.if", label %".88.endif.endif"
.88.endif.if:
  %".137" = load i32, i32* %"flag"
  %".138" = icmp eq i32 %".137", 0
  %".139" = icmp ne i1 %".138", 0
  br i1 %".139", label %".88.endif.if.if", label %".88.endif.if.else"
.88.endif.endif:
  %".167" = load i32, i32* %"j"
  %".168" = add i32 %".167", 1
  store i32 %".168", i32* %"j"
  br label %".77"
.88.endif.if.if:
  %"temp1" = alloca i32
  %".141" = load i32, i32* %"j"
  %".142" = load i32, i32* @"m"
  %".143" = sub i32 %".141", %".142"
  %".144" = add i32 %".143", 1
  store i32 %".144", i32* %"temp1"
  %".146" = getelementptr inbounds [3 x i8], [3 x i8]* @"str_%d0", i32 0, i32 0
  %".147" = load i32, i32* %"temp1"
  %".148" = call i32 (i8*, ...) @"printf"(i8* %".146", i32 %".147")
  br label %".88.endif.if.endif"
.88.endif.if.else:
  %"temp2" = alloca i32
  %".150" = load i32, i32* %"j"
  %".151" = load i32, i32* @"m"
  %".152" = sub i32 %".150", %".151"
  %".153" = add i32 %".152", 1
  store i32 %".153", i32* %"temp2"
  %".155" = getelementptr inbounds [4 x i8], [4 x i8]* @"str_,%d1", i32 0, i32 0
  %".156" = load i32, i32* %"temp2"
  %".157" = call i32 (i8*, ...) @"printf"(i8* %".155", i32 %".156")
  br label %".88.endif.if.endif"
.88.endif.if.endif:
  store i32 1, i32* %"flag"
  %".160" = load i32, i32* %"q"
  %".161" = sub i32 %".160", 1
  %".162" = getelementptr inbounds [100 x i32], [100 x i32]* @"prefix", i32 0, i32 %".161"
  %".163" = load i32, i32* %".162"
  %".164" = load i32, i32* %".162"
  store i32 %".164", i32* %"q"
  br label %".88.endif.endif"
.75.if:
  %".176" = getelementptr inbounds [6 x i8], [6 x i8]* @"str_False2", i32 0, i32 0
  %".177" = call i32 (i8*, ...) @"printf"(i8* %".176")
  br label %".75.endif"
.75.endif:
  ret void
}

@"str_%d0" = constant [3 x i8] c"%d\00"
@"str_,%d1" = constant [4 x i8] c",%d\00"
@"str_False2" = constant [6 x i8] c"False\00"
define i32 @"main"() 
{
main:
  %".2" = getelementptr inbounds [59 x i8], [59 x i8]* @"str_please input two strings, first is src, second is pattern
3", i32 0, i32 0
  %".3" = call i32 (i8*, ...) @"printf"(i8* %".2")
  store i32 0, i32* @"n"
  store i32 0, i32* @"m"
  br label %".7"
.6:
  br label %".27"
.7:
  %"i" = alloca i32
  store i32 0, i32* %"i"
  br label %".8"
.8:
  %".14" = load i32, i32* %"i"
  %".15" = icmp slt i32 %".14", 1000
  %".16" = icmp ne i1 %".15", 0
  br i1 %".16", label %".9", label %".6"
.9:
  %".18" = load i32, i32* %"i"
  %".19" = getelementptr inbounds [1000 x i8], [1000 x i8]* @"src", i32 0, i32 %".18"
  store i8 0, i8* %".19"
  %".21" = load i32, i32* %"i"
  %".22" = add i32 %".21", 1
  store i32 %".22", i32* %"i"
  br label %".8"
.10:
  br label %".6"
.26:
  br label %".47"
.27:
  %"i.1" = alloca i32
  store i32 0, i32* %"i.1"
  br label %".28"
.28:
  %".34" = load i32, i32* %"i.1"
  %".35" = icmp slt i32 %".34", 100
  %".36" = icmp ne i1 %".35", 0
  br i1 %".36", label %".29", label %".26"
.29:
  %".38" = load i32, i32* %"i.1"
  %".39" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".38"
  store i8 0, i8* %".39"
  %".41" = load i32, i32* %"i.1"
  %".42" = add i32 %".41", 1
  store i32 %".42", i32* %"i.1"
  br label %".28"
.30:
  br label %".26"
.46:
  %".66" = getelementptr inbounds [1000 x i8], [1000 x i8]* @"src", i32 0, i32 0
  %".67" = load i8, i8* %".66"
  %".68" = call i8* @"gets"(i8* %".66")
  %".69" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 0
  %".70" = load i8, i8* %".69"
  %".71" = call i8* @"gets"(i8* %".69")
  br label %".73"
.47:
  %"i.2" = alloca i32
  store i32 0, i32* %"i.2"
  br label %".48"
.48:
  %".54" = load i32, i32* %"i.2"
  %".55" = icmp slt i32 %".54", 100
  %".56" = icmp ne i1 %".55", 0
  br i1 %".56", label %".49", label %".46"
.49:
  %".58" = load i32, i32* %"i.2"
  %".59" = getelementptr inbounds [100 x i32], [100 x i32]* @"prefix", i32 0, i32 %".58"
  store i32 0, i32* %".59"
  %".61" = load i32, i32* %"i.2"
  %".62" = add i32 %".61", 1
  store i32 %".62", i32* %"i.2"
  br label %".48"
.50:
  br label %".46"
.72:
  br label %".110"
.73:
  %"i.3" = alloca i32
  store i32 0, i32* %"i.3"
  br label %".74"
.74:
  %".80" = load i32, i32* %"i.3"
  %".81" = icmp slt i32 %".80", 1000
  %".82" = icmp ne i1 %".81", 0
  br i1 %".82", label %".75", label %".72"
.75:
  %".84" = load i32, i32* %"i.3"
  %".85" = getelementptr inbounds [1000 x i8], [1000 x i8]* @"src", i32 0, i32 %".84"
  %".86" = load i8, i8* %".85"
  %".87" = load i8, i8* %".85"
  %".88" = icmp eq i8 %".87", 0
  %".89" = icmp ne i1 %".88", 0
  br i1 %".89", label %".75.if", label %".75.endif"
.76:
  br label %".75.endif"
.75.if:
  %".91" = load i32, i32* %"i.3"
  store i32 %".91", i32* @"n"
  br label %".72"
.75.endif:
  %".95" = load i32, i32* %"i.3"
  %".96" = getelementptr inbounds [1000 x i8], [1000 x i8]* @"src", i32 0, i32 %".95"
  %".97" = load i8, i8* %".96"
  %".98" = load i8, i8* %".96"
  %".99" = icmp eq i8 %".98", 10
  %".100" = icmp ne i1 %".99", 0
  br i1 %".100", label %".75.endif.if", label %".75.endif.endif"
.75.endif.if:
  %".102" = load i32, i32* %"i.3"
  store i32 %".102", i32* @"n"
  br label %".72"
.75.endif.endif:
  %".105" = load i32, i32* %"i.3"
  %".106" = add i32 %".105", 1
  store i32 %".106", i32* %"i.3"
  br label %".74"
.109:
  %".146" = load i32, i32* @"m"
  %".147" = icmp eq i32 %".146", 0
  %".148" = load i32, i32* @"n"
  %".149" = icmp eq i32 %".148", 0
  %".150" = icmp ne i1 %".147", 0
  %".151" = icmp ne i1 %".149", 0
  %".152" = or i1 %".150", %".151"
  %".153" = icmp ne i1 %".152", 0
  br i1 %".153", label %".109.if", label %".109.endif"
.110:
  %"i.4" = alloca i32
  store i32 0, i32* %"i.4"
  br label %".111"
.111:
  %".117" = load i32, i32* %"i.4"
  %".118" = icmp slt i32 %".117", 100
  %".119" = icmp ne i1 %".118", 0
  br i1 %".119", label %".112", label %".109"
.112:
  %".121" = load i32, i32* %"i.4"
  %".122" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".121"
  %".123" = load i8, i8* %".122"
  %".124" = load i8, i8* %".122"
  %".125" = icmp eq i8 %".124", 0
  %".126" = icmp ne i1 %".125", 0
  br i1 %".126", label %".112.if", label %".112.endif"
.113:
  br label %".112.endif"
.112.if:
  %".128" = load i32, i32* %"i.4"
  store i32 %".128", i32* @"m"
  br label %".109"
.112.endif:
  %".132" = load i32, i32* %"i.4"
  %".133" = getelementptr inbounds [100 x i8], [100 x i8]* @"pattern", i32 0, i32 %".132"
  %".134" = load i8, i8* %".133"
  %".135" = load i8, i8* %".133"
  %".136" = icmp eq i8 %".135", 10
  %".137" = icmp ne i1 %".136", 0
  br i1 %".137", label %".112.endif.if", label %".112.endif.endif"
.112.endif.if:
  %".139" = load i32, i32* %"i.4"
  store i32 %".139", i32* @"n"
  br label %".109"
.112.endif.endif:
  %".142" = load i32, i32* %"i.4"
  %".143" = add i32 %".142", 1
  store i32 %".143", i32* %"i.4"
  br label %".111"
.109.if:
  %".155" = getelementptr inbounds [13 x i8], [13 x i8]* @"str_empty string4", i32 0, i32 0
  %".156" = call i32 (i8*, ...) @"printf"(i8* %".155")
  ret i32 0
.109.endif:
  call void @"KMP_matching"()
  ret i32 0
}

@"str_please input two strings, first is src, second is pattern
3" = constant [59 x i8] c"please input two strings, first is src, second is pattern\0a\00"
@"str_empty string4" = constant [13 x i8] c"empty string\00"