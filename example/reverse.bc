; ModuleID = "C:\Users\Quicker\Documents\THU\curriculum\major\Compliers\homework\Final\Compiler\parser\generator.py"
target triple = "x86_64-pc-linux-gnu"
target datalayout = ""

declare i32 @"printf"(i8* %".1", ...) 

define i32 @"f"(i32 %"a") 
{
f:
  %"a.1" = alloca i32
  store i32 %"a", i32* %"a.1"
  %"b" = alloca i32
  %".4" = load i32, i32* %"a.1"
  store i32 %".4", i32* %"b"
  %".6" = load i32, i32* %"a.1"
  %".7" = icmp sgt i32 %".6", 0
  %".8" = icmp ne i1 %".7", 0
  br i1 %".8", label %"f.if", label %"f.endif"
f.if:
  %"c" = alloca i32
  %".10" = load i32, i32* %"a.1"
  %".11" = sub i32 %".10", 1
  store i32 %".11", i32* %"c"
  %".13" = load i32, i32* %"b"
  %".14" = load i32, i32* %"c"
  %".15" = call i32 @"f"(i32 %".14")
  %".16" = add i32 %".13", %".15"
  store i32 %".16", i32* %"b"
  br label %"f.endif"
f.endif:
  %".19" = load i32, i32* %"b"
  ret i32 %".19"
}

define i32 @"main"() 
{
main:
  %"ans" = alloca i32
  %".2" = call i32 @"f"(i32 10)
  store i32 %".2", i32* %"ans"
  %".4" = getelementptr inbounds [3 x i8], [3 x i8]* @"str_%d0", i32 0, i32 0
  %".5" = load i32, i32* %"ans"
  %".6" = call i32 (i8*, ...) @"printf"(i8* %".4", i32 %".5")
  ret i32 0
}

@"str_%d0" = constant [3 x i8] c"%d\00"
