; ModuleID = "/home/quicker/Documents/compiler/Compiler/parser/generator.py"
target triple = "x86_64-pc-linux-gnu"
target datalayout = ""

declare i32 @"printf"(i8* %".1", ...) 

declare i8* @"gets"(i8* %".1") 

define i32 @"main"() 
{
main:
  %"src" = alloca [1000 x i8]
  store [1000 x i8] zeroinitializer, [1000 x i8]* %"src"
  %"i" = alloca i32
  store i32 0, i32* %"i"
  store i32 0, i32* %"i"
  br label %".6"
.5:
  %".25" = getelementptr inbounds [1000 x i8], [1000 x i8]* %"src", i32 0, i32 0
  %".26" = load i8, i8* %".25"
  %".27" = call i8* @"gets"(i8* %".25")
  %"m" = alloca i32
  store i32 0, i32* %"m"
  store i32 0, i32* %"m"
  br label %".31"
.6:
  %"i.1" = alloca i32
  store i32 0, i32* %"i.1"
  br label %".7"
.7:
  %".13" = load i32, i32* %"i.1"
  %".14" = icmp slt i32 %".13", 1000
  %".15" = icmp ne i1 %".14", 0
  br i1 %".15", label %".8", label %".5"
.8:
  %".17" = load i32, i32* %"i.1"
  %".18" = getelementptr inbounds [1000 x i8], [1000 x i8]* %"src", i32 0, i32 %".17"
  store i8 0, i8* %".18"
  %".20" = load i32, i32* %"i.1"
  %".21" = add i32 %".20", 1
  store i32 %".21", i32* %"i.1"
  br label %".7"
.9:
  br label %".5"
.30:
  %".57" = load i32, i32* %"m"
  %".58" = icmp eq i32 %".57", 0
  %".59" = icmp ne i1 %".58", 0
  br i1 %".59", label %".30.if", label %".30.endif"
.31:
  %"i.2" = alloca i32
  store i32 0, i32* %"i.2"
  br label %".32"
.32:
  %".38" = load i32, i32* %"i.2"
  %".39" = icmp slt i32 %".38", 1000
  %".40" = icmp ne i1 %".39", 0
  br i1 %".40", label %".33", label %".30"
.33:
  %".42" = load i32, i32* %"i.2"
  %".43" = getelementptr inbounds [1000 x i8], [1000 x i8]* %"src", i32 0, i32 %".42"
  %".44" = load i8, i8* %".43"
  %".45" = load i8, i8* %".43"
  %".46" = icmp eq i8 %".45", 0
  %".47" = icmp ne i1 %".46", 0
  br i1 %".47", label %".33.if", label %".33.endif"
.34:
  br label %".33.endif"
.33.if:
  %".49" = load i32, i32* %"i.2"
  store i32 %".49", i32* %"m"
  br label %".30"
.33.endif:
  %".53" = load i32, i32* %"i.2"
  %".54" = add i32 %".53", 1
  store i32 %".54", i32* %"i.2"
  br label %".32"
.30.if:
  %".61" = getelementptr inbounds [13 x i8], [13 x i8]* @"str_empty string0", i32 0, i32 0
  %".62" = call i32 (i8*, ...) @"printf"(i8* %".61")
  ret i32 0
.30.endif:
  %"flag" = alloca i32
  store i32 1, i32* %"flag"
  br label %".66"
.65:
  %".99" = load i32, i32* %"flag"
  %".100" = icmp eq i32 %".99", 0
  %".101" = icmp ne i1 %".100", 0
  br i1 %".101", label %".65.if", label %".65.else"
.66:
  %"i.3" = alloca i32
  store i32 0, i32* %"i.3"
  br label %".67"
.67:
  %".73" = load i32, i32* %"i.3"
  %".74" = load i32, i32* %"m"
  %".75" = icmp slt i32 %".73", %".74"
  %".76" = icmp ne i1 %".75", 0
  br i1 %".76", label %".68", label %".65"
.68:
  %".78" = load i32, i32* %"i.3"
  %".79" = getelementptr inbounds [1000 x i8], [1000 x i8]* %"src", i32 0, i32 %".78"
  %".80" = load i8, i8* %".79"
  %".81" = load i8, i8* %".79"
  %".82" = load i32, i32* %"m"
  %".83" = sub i32 %".82", 1
  %".84" = load i32, i32* %"i.3"
  %".85" = sub i32 %".83", %".84"
  %".86" = getelementptr inbounds [1000 x i8], [1000 x i8]* %"src", i32 0, i32 %".85"
  %".87" = load i8, i8* %".86"
  %".88" = load i8, i8* %".86"
  %".89" = icmp ne i8 %".81", %".88"
  %".90" = icmp ne i1 %".89", 0
  br i1 %".90", label %".68.if", label %".68.endif"
.69:
  br label %".68.endif"
.68.if:
  store i32 0, i32* %"flag"
  br label %".65"
.68.endif:
  %".95" = load i32, i32* %"i.3"
  %".96" = add i32 %".95", 1
  store i32 %".96", i32* %"i.3"
  br label %".67"
.65.if:
  %".103" = getelementptr inbounds [6 x i8], [6 x i8]* @"str_False1", i32 0, i32 0
  %".104" = call i32 (i8*, ...) @"printf"(i8* %".103")
  br label %".65.endif"
.65.else:
  %".106" = getelementptr inbounds [5 x i8], [5 x i8]* @"str_True2", i32 0, i32 0
  %".107" = call i32 (i8*, ...) @"printf"(i8* %".106")
  br label %".65.endif"
.65.endif:
  ret i32 0
}

@"str_empty string0" = constant [13 x i8] c"empty string\00"
@"str_False1" = constant [6 x i8] c"False\00"
@"str_True2" = constant [5 x i8] c"True\00"